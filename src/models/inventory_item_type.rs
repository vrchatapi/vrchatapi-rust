/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InventoryItemType {
    #[serde(rename = "bundle")]
    Bundle,
    #[serde(rename = "prop")]
    Prop,
    #[serde(rename = "emoji")]
    Emoji,
    #[serde(rename = "sticker")]
    Sticker,
}

impl std::fmt::Display for InventoryItemType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Bundle => write!(f, "bundle"),
            Self::Prop => write!(f, "prop"),
            Self::Emoji => write!(f, "emoji"),
            Self::Sticker => write!(f, "sticker"),
        }
    }
}

impl Default for InventoryItemType {
    fn default() -> InventoryItemType {
        Self::Bundle
    }
}
