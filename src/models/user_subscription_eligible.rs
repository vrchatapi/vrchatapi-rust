/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserSubscriptionEligible {
    #[serde(rename = "activeCancelledSubscription")]
    pub active_cancelled_subscription: bool,
    #[serde(rename = "giftEligible")]
    pub gift_eligible: bool,
    #[serde(rename = "nonExtendVendorWillLoseGiftTime")]
    pub non_extend_vendor_will_lose_gift_time: bool,
    #[serde(rename = "purchaseEligible")]
    pub purchase_eligible: bool,
    #[serde(rename = "subscriptionEligible")]
    pub subscription_eligible: bool,
    #[serde(rename = "subscriptionOnAltAccount")]
    pub subscription_on_alt_account: bool,
}

impl UserSubscriptionEligible {
    pub fn new(
        active_cancelled_subscription: bool,
        gift_eligible: bool,
        non_extend_vendor_will_lose_gift_time: bool,
        purchase_eligible: bool,
        subscription_eligible: bool,
        subscription_on_alt_account: bool,
    ) -> UserSubscriptionEligible {
        UserSubscriptionEligible {
            active_cancelled_subscription,
            gift_eligible,
            non_extend_vendor_will_lose_gift_time,
            purchase_eligible,
            subscription_eligible,
            subscription_on_alt_account,
        }
    }
}
