/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SentNotification :
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SentNotification {
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "details")]
    pub details: serde_json::Value,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "message")]
    pub message: String,
    /// A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.
    #[serde(rename = "receiverUserId")]
    pub receiver_user_id: String,
    /// A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.
    #[serde(rename = "senderUserId")]
    pub sender_user_id: String,
    /// -| **DEPRECATED:** VRChat API no longer return usernames of other users. [See issue by Tupper for more information](https://github.com/pypy-vrc/VRCX/issues/429).
    #[serde(rename = "senderUsername", skip_serializing_if = "Option::is_none")]
    pub sender_username: Option<String>,
    #[serde(rename = "type")]
    pub r#type: models::NotificationType,
}

impl SentNotification {
    pub fn new(
        created_at: String,
        details: serde_json::Value,
        id: String,
        message: String,
        receiver_user_id: String,
        sender_user_id: String,
        r#type: models::NotificationType,
    ) -> SentNotification {
        SentNotification {
            created_at,
            details,
            id,
            message,
            receiver_user_id,
            sender_user_id,
            sender_username: None,
            r#type,
        }
    }
}
