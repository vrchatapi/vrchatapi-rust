/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GroupPrivacy {
    #[serde(rename = "default")]
    Default,
    #[serde(rename = "private")]
    Private,
}

impl std::fmt::Display for GroupPrivacy {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Default => write!(f, "default"),
            Self::Private => write!(f, "private"),
        }
    }
}

impl Default for GroupPrivacy {
    fn default() -> GroupPrivacy {
        Self::Default
    }
}
