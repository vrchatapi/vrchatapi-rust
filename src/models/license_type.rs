/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LicenseType {
    #[serde(rename = "avatar")]
    Avatar,
    #[serde(rename = "licenseGroup")]
    LicenseGroup,
    #[serde(rename = "permission")]
    Permission,
    #[serde(rename = "product")]
    Product,
}

impl std::fmt::Display for LicenseType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Avatar => write!(f, "avatar"),
            Self::LicenseGroup => write!(f, "licenseGroup"),
            Self::Permission => write!(f, "permission"),
            Self::Product => write!(f, "product"),
        }
    }
}

impl Default for LicenseType {
    fn default() -> LicenseType {
        Self::Avatar
    }
}
