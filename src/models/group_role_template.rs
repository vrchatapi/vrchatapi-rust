/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GroupRoleTemplate {
    #[serde(rename = "default")]
    Default,
    #[serde(rename = "managedFree")]
    ManagedFree,
    #[serde(rename = "managedInvite")]
    ManagedInvite,
    #[serde(rename = "managedRequest")]
    ManagedRequest,
}

impl std::fmt::Display for GroupRoleTemplate {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Default => write!(f, "default"),
            Self::ManagedFree => write!(f, "managedFree"),
            Self::ManagedInvite => write!(f, "managedInvite"),
            Self::ManagedRequest => write!(f, "managedRequest"),
        }
    }
}

impl Default for GroupRoleTemplate {
    fn default() -> GroupRoleTemplate {
        Self::Default
    }
}
