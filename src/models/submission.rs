/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Submission :
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Submission {
    /// Either world ID or avatar ID
    #[serde(rename = "contentId")]
    pub content_id: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "jamId")]
    pub jam_id: String,
    #[serde(rename = "ratingScore", skip_serializing_if = "Option::is_none")]
    pub rating_score: Option<i32>,
    /// A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.
    #[serde(rename = "submitterId")]
    pub submitter_id: String,
}

impl Submission {
    pub fn new(
        content_id: String,
        created_at: String,
        description: String,
        id: String,
        jam_id: String,
        submitter_id: String,
    ) -> Submission {
        Submission {
            content_id,
            created_at,
            description,
            id,
            jam_id,
            rating_score: None,
            submitter_id,
        }
    }
}
