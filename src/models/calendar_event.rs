/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CalendarEvent :
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CalendarEvent {
    #[serde(rename = "accessType")]
    pub access_type: String,
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
    #[serde(
        rename = "closeInstanceAfterEndMinutes",
        skip_serializing_if = "Option::is_none"
    )]
    pub close_instance_after_end_minutes: Option<i32>,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(
        rename = "deletedAt",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub deleted_at: Option<Option<String>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "endsAt", skip_serializing_if = "Option::is_none")]
    pub ends_at: Option<String>,
    #[serde(rename = "featured", skip_serializing_if = "Option::is_none")]
    pub featured: Option<bool>,
    #[serde(
        rename = "guestEarlyJoinMinutes",
        skip_serializing_if = "Option::is_none"
    )]
    pub guest_early_join_minutes: Option<i32>,
    #[serde(
        rename = "hostEarlyJoinMinutes",
        skip_serializing_if = "Option::is_none"
    )]
    pub host_early_join_minutes: Option<i32>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "imageId", skip_serializing_if = "Option::is_none")]
    pub image_id: Option<String>,
    #[serde(
        rename = "imageUrl",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub image_url: Option<Option<String>>,
    #[serde(
        rename = "interestedUserCount",
        skip_serializing_if = "Option::is_none"
    )]
    pub interested_user_count: Option<i32>,
    #[serde(rename = "isDraft", skip_serializing_if = "Option::is_none")]
    pub is_draft: Option<bool>,
    #[serde(rename = "languages", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<String>>,
    #[serde(rename = "ownerId", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<String>,
    #[serde(rename = "platforms", skip_serializing_if = "Option::is_none")]
    pub platforms: Option<Vec<String>>,
    #[serde(
        rename = "roleIds",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub role_ids: Option<Option<Vec<String>>>,
    #[serde(rename = "startsAt", skip_serializing_if = "Option::is_none")]
    pub starts_at: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(
        rename = "usesInstanceOverflow",
        skip_serializing_if = "Option::is_none"
    )]
    pub uses_instance_overflow: Option<bool>,
    #[serde(rename = "userInterest", skip_serializing_if = "Option::is_none")]
    pub user_interest: Option<models::CalendarEventUserInterest>,
}

impl CalendarEvent {
    pub fn new(
        access_type: String,
        created_at: String,
        id: String,
        title: String,
    ) -> CalendarEvent {
        CalendarEvent {
            access_type,
            category: None,
            close_instance_after_end_minutes: None,
            created_at,
            deleted_at: None,
            description: None,
            ends_at: None,
            featured: None,
            guest_early_join_minutes: None,
            host_early_join_minutes: None,
            id,
            image_id: None,
            image_url: None,
            interested_user_count: None,
            is_draft: None,
            languages: None,
            owner_id: None,
            platforms: None,
            role_ids: None,
            starts_at: None,
            tags: None,
            title,
            r#type: None,
            updated_at: None,
            uses_instance_overflow: None,
            user_interest: None,
        }
    }
}
