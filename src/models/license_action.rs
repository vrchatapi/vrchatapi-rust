/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LicenseAction {
    #[serde(rename = "wear")]
    Wear,
    #[serde(rename = "have")]
    Have,
}

impl std::fmt::Display for LicenseAction {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Wear => write!(f, "wear"),
            Self::Have => write!(f, "have"),
        }
    }
}

impl Default for LicenseAction {
    fn default() -> LicenseAction {
        Self::Wear
    }
}
