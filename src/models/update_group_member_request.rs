/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateGroupMemberRequest {
    #[serde(rename = "visibility", skip_serializing_if = "Option::is_none")]
    pub visibility: Option<models::GroupUserVisibility>,
    #[serde(
        rename = "isSubscribedToAnnouncements",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_subscribed_to_announcements: Option<bool>,
    #[serde(rename = "managerNotes", skip_serializing_if = "Option::is_none")]
    pub manager_notes: Option<String>,
}

impl UpdateGroupMemberRequest {
    pub fn new() -> UpdateGroupMemberRequest {
        UpdateGroupMemberRequest {
            visibility: None,
            is_subscribed_to_announcements: None,
            manager_notes: None,
        }
    }
}
