/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GroupMemberStatus {
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "member")]
    Member,
    #[serde(rename = "requested")]
    Requested,
    #[serde(rename = "invited")]
    Invited,
    #[serde(rename = "banned")]
    Banned,
    #[serde(rename = "userblocked")]
    Userblocked,
}

impl std::fmt::Display for GroupMemberStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Inactive => write!(f, "inactive"),
            Self::Member => write!(f, "member"),
            Self::Requested => write!(f, "requested"),
            Self::Invited => write!(f, "invited"),
            Self::Banned => write!(f, "banned"),
            Self::Userblocked => write!(f, "userblocked"),
        }
    }
}

impl Default for GroupMemberStatus {
    fn default() -> GroupMemberStatus {
        Self::Inactive
    }
}
