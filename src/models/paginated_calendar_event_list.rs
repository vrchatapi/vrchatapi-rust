/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaginatedCalendarEventList {
    #[serde(rename = "results", skip_serializing_if = "Option::is_none")]
    pub results: Option<Vec<models::CalendarEvent>>,
    /// The total number of results that the query would return if there were no pagination.
    #[serde(rename = "totalCount", skip_serializing_if = "Option::is_none")]
    pub total_count: Option<i32>,
    /// Whether there are more results after this page.
    #[serde(rename = "hasNext", skip_serializing_if = "Option::is_none")]
    pub has_next: Option<bool>,
}

impl PaginatedCalendarEventList {
    pub fn new() -> PaginatedCalendarEventList {
        PaginatedCalendarEventList {
            results: None,
            total_count: None,
            has_next: None,
        }
    }
}
