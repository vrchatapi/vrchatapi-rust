/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupInstance {
    /// InstanceID can be \"offline\" on User profiles if you are not friends with that user and \"private\" if you are friends and user is in private instance.
    #[serde(rename = "instanceId")]
    pub instance_id: String,
    /// Represents a unique location, consisting of a world identifier and an instance identifier, or \"offline\" if the user is not on your friends list.
    #[serde(rename = "location")]
    pub location: String,
    #[serde(rename = "world")]
    pub world: models::World,
    #[serde(rename = "memberCount")]
    pub member_count: i32,
}

impl GroupInstance {
    pub fn new(
        instance_id: String,
        location: String,
        world: models::World,
        member_count: i32,
    ) -> GroupInstance {
        GroupInstance {
            instance_id,
            location,
            world,
            member_count,
        }
    }
}
